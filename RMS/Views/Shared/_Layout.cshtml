<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>RMS</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/RMS.styles.css" asp-append-version="true" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
   
    <link href="https://fonts.googleapis.com/css2?family=Lexend:wght@300..700&display=swap" rel="stylesheet">

    @* Font Awsome *@
    <link href=" https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" rel="stylesheet">


   


    @* Datatables CSS & JS *@
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
  
   <style>
       *{
            font-family: Lexend !important;
       }
        .nav-link.active {
           
            color: #fff !important; /* Change the color for the active link */
            background: #000;
            border-radius: 50px;
            padding: 5px 15px;
        }

        #tbleqptissue thead tr {
            font-size: 14px !important;
        }
        #tbleqptissue thead tr {
            font-size: 14px !important;
        }

        .bg-warning{
            color: black !important;
        }

        .tbody td{
            font-size: 14px !important;
        }

        .thead th{
            font-size: 14px !important;
        }

   </style>

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index"><b>RMS</b></a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Dashboard</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Branch" asp-action="Index">Branch</a>
                        </li>
                          <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Eqpt" asp-action="Index">Eqpt Type</a>
                        </li>
                          <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="EqptIssue" asp-action="Index">Eqpt Issue</a>
                        </li>

                        
                           <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="tasks" asp-action="Index">Branch Tasks</a>
                        </li>

                           <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="account" asp-action="logout">Logout </a>
                        </li>


                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            <center> &copy; 2024 - RMS - IT BR</center>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
  
   
    <script>

        $(document).ready(function () {
            $('#tblbranch').DataTable(); // Initialize DataTable after everything is loaded

            $('#tbleqptstore').DataTable(); // Initialize DataTable after everything is loaded


            var tableeqpt = $('#tbleqptissue').DataTable();

            // Function to update item count
            function updateItemCount() {
                var filteredItems = tableeqpt.rows({ filter: 'applied' }).count();
                var totalItems = tableeqpt.rows().data().length;
                $('#itemCountField').text(filteredItems);
            }

            // Call updateItemCount on page load to set the initial count
            updateItemCount();

            // Event listeners for dropdown filters
            $('#branchFilter').on('change', function () {
                var branchValue = $(this).val();
                tableeqpt.columns(1).search(branchValue).draw();
                updateItemCount();
            });
             // Event listeners for dropdown filters
            $('#eqptstatus').on('change', function () {
                var eqptstatus = $(this).val();
                tableeqpt.columns(6).search(eqptstatus).draw();
                updateItemCount();
            });

            $('#eqptcond').on('change', function () {
                var eqptValue = $(this).val();
                tableeqpt.columns(5).search(eqptValue).draw();
                updateItemCount();
            });

            $('#eqptFilter').on('change', function () {
                var eqptValue = $(this).val();
                tableeqpt.columns(2).search(eqptValue).draw();
                updateItemCount();
            });

            // Date filtering
            $('#dateissue, #dateissueto').on('change', function () {
                var dateFrom = $('#dateissue').val();
                var dateTo = $('#dateissueto').val();

                // Custom date filter
                $.fn.dataTable.ext.search = []; // Clear previous filters

                if (dateFrom && dateTo) {
                    $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
                        var tableDate = data[8]; // Adjust to match your date column (8th column)

                        // Convert table date to Date object
                        var tableDateParts = tableDate.split('-');
                        var tableFormattedDate = new Date(
                            tableDateParts[2],
                            tableDateParts[1] - 1,
                            tableDateParts[0]
                        );

                        // Convert input dates to Date objects
                        var from = new Date(dateFrom);
                        var to = new Date(dateTo);

                        return tableFormattedDate >= from && tableFormattedDate <= to;
                    });
                }

                tableeqpt.draw(); // Redraw the table after applying date filter
                updateItemCount(); // Update item count after redraw
            });

            // Helper function to format dates
            function formatDate(dateString) {
                var parts = dateString.split('-');
                return parts[2] + '-' + parts[1] + '-' + parts[0];
            }




            $('#tbleqpt').DataTable(); // Initialize DataTable after everything is loaded
             
            
            $('#tbltasks').DataTable(); // Initialize DataTable after everything is loaded


            // Initialize the DataTable
            var tabletask = $('#tbltasks').DataTable();

            // Branch dropdown filter
            $('#FilterBranch').on('change', function () {
                var branchValue = $(this).val();
                tabletask.columns(1).search(branchValue).draw(); // Filter by branch (2nd column)
            });

            // Equipment dropdown filter
            $('#FilterStatus').on('change', function () {
                var eqptValue = $(this).val();
                tabletask.columns(6).search(eqptValue).draw(); // Filter by equipment name (4th column)
            });


            // Initialize the DataTable
            var tabletaskhome = $('#tbltaskshome').DataTable();

            // Branch dropdown filter
            $('#FilterBranchHome').on('change', function () {
                var branchValue = $(this).val();
                tabletaskhome.columns(1).search(branchValue).draw(); // Filter by branch (2nd column)
            });

        });
    </script>

    <script>
        // Get the current URL path
        const currentPath = window.location.pathname;

        // Select all the navigation links
        const navLinks = document.querySelectorAll('.navbar-nav .nav-link');

        // Loop through each link and check if the href matches the current URL
        navLinks.forEach(link => {
            if (link.getAttribute('href') === currentPath) {
                // Add the 'active' class to the matching link
                link.classList.add('active');
            }
        });
    </script>


    <script>

        // Code Equipt Issue Code
        $(document).ready(function () {
           
            $('#submit-eqpt-issue').click(function (e) {
               

                const formData = {
                    Date: $('.dateissue').val(),
                    Issuevoucher: $('.issuevoucher').val(),
                    Branchid: $('.branchissueid').val(),
                    Items: []
                };

                // Loop through all form field sets
                $('.duplicable-fields-group').each(function () {
                    formData.Items.push({
                        EqptId: $(this).find('.eqptissueId').val(),
                        Eqptname: $(this).find('.eqptnameissue').val(),
                        StatusId: $(this).find('.eqptstatusId').val(),
                        Qty: $(this).find('.qtyissue').val(),
                        //Branchid: $(this).find('.branchissueid').val(),
                        Conditionid: $(this).find('.conditionidissue').val(),
                        Issueto: $(this).find('.issuetoissue').val(),
                        Details: $(this).find('.detailsissue').val()
                    });
                });


             

                $.ajax({
                    url: '/Eqptissue/Add', // Controller URL
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (response) {
                        if (response.message) {
                            
                            // Handle success
                            handleSuccessMessage();



                            //window.location.href = '/Eqptissue'; // Redirect on success
                        } else {
                            alert('Error : ' + response.message);
                        }
                    },
                    error: function (xhr) {
                        alert('Error: ' + xhr.responseText);
                    }
                });
            });


            // Function to reset the fields and remove duplicated groups
            function resetDuplicableFields() {
                // Keep the first group and remove all other duplicable groups
                $('.duplicable-fields-group:not(:first)').remove();

                // Clear all input, select, and textarea values in the first group
                $('.duplicable-fields-group:first').find('input, select, textarea').val('');

                // Re-initialize Remove button visibility
                updateRemoveButtonVisibility();
            }

            // Call this function after the success message is received
            function handleSuccessMessage() {
                // Display a success message (optional)
                alert('Data Saved Successfully!');

                // Reset the fields and duplicated sections
                resetDuplicableFields();
            }


            // Add new duplicable fields
            $('#add-duplicable-field').click(function () {
                const newGroup = $('.duplicable-fields-group:first').clone();
                newGroup.find('input, select, textarea').val(''); // Clear input values
                $('#duplicable-fields-section').append(newGroup);

                // Update Remove button visibility for all groups
                updateRemoveButtonVisibility();
            });

            // Remove a duplicable field
            $(document).on('click', '.remove-field', function () {
                if ($('.duplicable-fields-group').length > 1) {
                    $(this).closest('.duplicable-fields-group').remove();
                } else {
                    alert('You must have at least one set of fields.');
                }

                // Update Remove button visibility
                updateRemoveButtonVisibility();
            });



            // Update Remove button visibility
            function updateRemoveButtonVisibility() {
                const groups = $('.duplicable-fields-group');

                groups.each(function (index) {
                    if (index === 0) {
                        // Hide Remove button for the first group
                        $(this).find('.remove-field').hide();
                    } else {
                        // Show Remove button for duplicate groups
                        $(this).find('.remove-field').show();
                    }
                });
            }

            // Initialize Remove button visibility on page load
            updateRemoveButtonVisibility();



        });
 
    </script>



    <script>

        // Code Equipt Issue Code
        $(document).ready(function () {

            $('#print-issue-eqpt').click(function (e) {

                // Get filter values
                var branchid = $("#branchFilter").find(":selected").attr("idval");
                
                var eqptid = $("#eqptFilter").find(":selected").attr("idval");
                var conditionid = $("#eqptcond").find(":selected").attr("idval");
                var eqptstatus = $("#eqptstatus").find(":selected").attr("idval");

                var datefrom = $("#dateissue").val();
                var dateto = $("#dateissueto").val();

                // Construct the URL with query parameters
                var url = `/Eqptissue/PrintEqpt?Branchid=${branchid}&EqptId=${eqptid}&Conditionid=${conditionid}&Statusid=${eqptstatus}&Datefrom=${datefrom}&Dateto=${dateto}`;

                // Open the URL in a new tab
                window.open(url, '_blank');



        });
        });


    </script>






    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
